(function(){"use strict";function s(o){return self.onmessage=async({data:e})=>{try{const t=o[e.name];if(!t)throw new Error(`[BUG] No handler for type ${e.name}`);let r=t.apply(self,e.args);r instanceof Promise&&(r=await r),self.postMessage({reqid:e.reqid,resolve:r})}catch(t){self.postMessage({reqid:e.reqid,reject:t.message})}},null}async function l(o,e){const t=o.split("/").filter(Boolean),r=t.slice(0,-1).join("/"),n=await i(r,{root:e?.root}),a=t[t.length-1];if(!a)throw new Error("Invalid file path without basename");return await n.getFileHandle(a,{create:e?.create})}async function i(o,e){let t=e?.root??await globalThis._o.getStorageRoot();const r=o.split("/").filter(Boolean);for(const n of r)t=await t.getDirectoryHandle(n,{create:!1});return t}self._o={},self._o.getStorageRoot=()=>self.navigator.storage.getDirectory();async function c(o,e){const r=await(await l(o)).createSyncAccessHandle();return r.truncate(0),r.write(e),r.flush(),r.close(),e.byteLength}s({writeContents:c})})();
